module Groups where

import User
import DA.List

template Group with
    transactionCID: ContractId User
    involvedParties: [Party]
  where
    signatory involvedParties
    nonconsuming choice MakeGroupTransaction: () with
        currLender: Party
        totalAmount: Int
      controller currLender
      do
      let individualAmount = totalAmount/(length involvedParties)
      let makeIndividualTransactions involvedParties individualAmount = map (\(borrower, amount) -> ( exercise transactionCID MakeTransaction with lender=currLender, amount=amount)) (involvedParties individualAmount)
      return ()

      





        
