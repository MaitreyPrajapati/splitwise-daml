module Group where

import Transaction
type GroupContractKey = (Party, Text)

template Group with
    lender: Party
    involvedParties: [Party]
    groupName : Text
  where
    signatory lender

    key lender : Party
    maintainer key

    nonconsuming choice MakeGroupTransaction: () with
        currGroupName: Text
        totalAmount: Decimal
      controller lender
      do
        assertMsg "There is something wrong with the group" (currGroupName == groupName)
        let individualAmount = totalAmount / (intToDecimal (length involvedParties))
        forA involvedParties $ \borrower -> create Transaction with lender=lender, borrower=borrower, amount=individualAmount       
        return ()

      





        
