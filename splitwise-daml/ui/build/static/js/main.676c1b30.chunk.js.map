{"version":3,"sources":["../daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662/lib/index.js","../daml.js/splitwise-daml-0.1.0/lib/Transaction/module.js","../daml.js/splitwise-daml-0.1.0/lib/index.js","../daml.js/splitwise-daml-0.1.0/lib/Group/index.js","../daml.js/splitwise-daml-0.1.0/lib/Group/module.js","../daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662/lib/DA/index.js","../daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662/lib/DA/Internal/index.js","../daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662/lib/DA/Internal/Template/index.js","../daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662/lib/DA/Internal/Template/module.js","../daml.js/splitwise-daml-0.1.0/lib/Transaction/index.js","../daml.js/splitwise-daml-0.1.0/lib/User/index.js","../daml.js/splitwise-daml-0.1.0/lib/User/module.js","config.ts","Credentials.ts","components/LoginScreen.tsx","components/UserList.tsx","components/PartyListEdit.tsx","components/TransactionsList.tsx","components/TransactionBox.tsx","components/GroupBox.tsx","components/MainView.tsx","components/MainScreen.tsx","components/App.tsx","index.tsx"],"names":["Object","defineProperty","exports","value","DA","require","packageId","jtv","damlTypes","pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662","Transaction","templateId","keyDecoder","lazyMemo","constant","undefined","keyEncode","decoder","object","lender","Party","borrower","amount","Numeric","encode","__typed__","Archive","template","choiceName","argumentDecoder","Internal","Template","argumentEncode","resultDecoder","Unit","resultEncode","registerTemplate","Group","User","m","p","hasOwnProperty","__export","MakeGroupTransaction","currGroupName","Text","totalAmount","List","involvedParties","groupName","MakeTransaction","Follow","userToFollow","username","following","ContractId","DeploymentMode","deploymentMode","window","location","hostname","endsWith","PROD_DABL","PROD_OTHER","ledgerId","split","process","httpBaseUrl","computeCredentials","party","token","payload","computeToken","LoginScreen","onLogin","React","useState","setUsername","login","useCallback","credentials","a","ledger","Ledger","fetchByKey","user","create","alert","handleLogin","event","preventDefault","useEffect","url","URL","toString","searchParams","get","Error","search","history","replaceState","state","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","size","color","Content","Form","className","Segment","Input","fluid","icon","iconPosition","placeholder","onChange","e","currentTarget","Button","primary","onClick","assign","UserList","users","onFollow","divided","relaxed","sort","x","y","localeCompare","map","Item","Icon","name","floated","link","PartyListEdit","parties","onAddParty","newParty","setNewParty","isSubmitting","setIsSubmitting","addParty","success","onSubmit","readOnly","loading","type","TransactionList","debt","allTransactions","useStreamQuery","useParty","myUser","useStreamFetchByKeys","contracts","useLedger","netValue","deleteTransaction","transactionContractId","archive","JSON","parse","stringify","transaction","parseFloat","ListItem","contractId","MessageEdit","followers","allGroups","setBorrower","setAmount","isGroup","setIsGroup","transactionTargetOptions","follower","key","text","groupNames","group","allGroupsTragetOptions","isgroup","concat","submitTransaction","submitGroupTransaction","exerciseByKey","Dropdown","selection","options","textContent","includes","console","log","setAmountForTrnsaction","disabled","content","GroupBox","setGroupName","isSelected","setIsSelected","label","addToSelect","newGroupMembers","prev","submitMessage","isMulti","length","MainView","allUsers","useStreamQueries","useMemo","filter","follow","Container","centered","columns","Row","stretched","padding","Subheader","Divider","TransactionBox","MainScreen","onLogout","Menu","borderless","Image","href","target","src","alt","position","active","App","setCredentials","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.676c1b30.chunk.js","sourcesContent":["\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DA = require('./DA');\nexports.DA = DA;\nexports.packageId = 'd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662';\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable-next-line no-unused-vars */\nvar jtv = require('@mojotech/json-type-validation');\n/* eslint-disable-next-line no-unused-vars */\nvar damlTypes = require('@daml/types');\n/* eslint-disable-next-line no-unused-vars */\nvar damlLedger = require('@daml/ledger');\n\nvar pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662 = require('@daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662');\n\n\nexports.Transaction = {\n  templateId: 'e250459dd4d01ceaad370fd90d53caf5628d829c5aff34e04749866d8e50029b:Transaction:Transaction',\n  keyDecoder: damlTypes.lazyMemo(function () { return jtv.constant(undefined); }),\n  keyEncode: function () { throw 'EncodeError'; },\n  decoder: damlTypes.lazyMemo(function () { return jtv.object({lender: damlTypes.Party.decoder, borrower: damlTypes.Party.decoder, amount: damlTypes.Numeric(10).decoder, }); }),\n  encode: function (__typed__) {\n  return {\n    lender: damlTypes.Party.encode(__typed__.lender),\n    borrower: damlTypes.Party.encode(__typed__.borrower),\n    amount: damlTypes.Numeric(10).encode(__typed__.amount),\n  };\n}\n,\n  Archive: {\n    template: function () { return exports.Transaction; },\n    choiceName: 'Archive',\n    argumentDecoder: damlTypes.lazyMemo(function () { return pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662.DA.Internal.Template.Archive.decoder; }),\n    argumentEncode: function (__typed__) { return pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662.DA.Internal.Template.Archive.encode(__typed__); },\n    resultDecoder: damlTypes.lazyMemo(function () { return damlTypes.Unit.decoder; }),\n    resultEncode: function (__typed__) { return damlTypes.Unit.encode(__typed__); },\n  },\n};\n\n\ndamlTypes.registerTemplate(exports.Transaction);\n\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Group = require('./Group');\nexports.Group = Group;\nvar Transaction = require('./Transaction');\nexports.Transaction = Transaction;\nvar User = require('./User');\nexports.User = User;\nexports.packageId = 'e250459dd4d01ceaad370fd90d53caf5628d829c5aff34e04749866d8e50029b';\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require('./module'));\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable-next-line no-unused-vars */\nvar jtv = require('@mojotech/json-type-validation');\n/* eslint-disable-next-line no-unused-vars */\nvar damlTypes = require('@daml/types');\n/* eslint-disable-next-line no-unused-vars */\nvar damlLedger = require('@daml/ledger');\n\nvar pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662 = require('@daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662');\n\n\nexports.MakeGroupTransaction = {\n  decoder: damlTypes.lazyMemo(function () { return jtv.object({currGroupName: damlTypes.Text.decoder, totalAmount: damlTypes.Numeric(10).decoder, }); }),\n  encode: function (__typed__) {\n  return {\n    currGroupName: damlTypes.Text.encode(__typed__.currGroupName),\n    totalAmount: damlTypes.Numeric(10).encode(__typed__.totalAmount),\n  };\n}\n,\n};\n\n\n\nexports.Group = {\n  templateId: 'e250459dd4d01ceaad370fd90d53caf5628d829c5aff34e04749866d8e50029b:Group:Group',\n  keyDecoder: damlTypes.lazyMemo(function () { return damlTypes.lazyMemo(function () { return damlTypes.List(damlTypes.Party).decoder; }); }),\n  keyEncode: function (__typed__) { return damlTypes.List(damlTypes.Party).encode(__typed__); },\n  decoder: damlTypes.lazyMemo(function () { return jtv.object({lender: damlTypes.Party.decoder, involvedParties: damlTypes.List(damlTypes.Party).decoder, groupName: damlTypes.Text.decoder, }); }),\n  encode: function (__typed__) {\n  return {\n    lender: damlTypes.Party.encode(__typed__.lender),\n    involvedParties: damlTypes.List(damlTypes.Party).encode(__typed__.involvedParties),\n    groupName: damlTypes.Text.encode(__typed__.groupName),\n  };\n}\n,\n  Archive: {\n    template: function () { return exports.Group; },\n    choiceName: 'Archive',\n    argumentDecoder: damlTypes.lazyMemo(function () { return pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662.DA.Internal.Template.Archive.decoder; }),\n    argumentEncode: function (__typed__) { return pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662.DA.Internal.Template.Archive.encode(__typed__); },\n    resultDecoder: damlTypes.lazyMemo(function () { return damlTypes.Unit.decoder; }),\n    resultEncode: function (__typed__) { return damlTypes.Unit.encode(__typed__); },\n  },\n  MakeGroupTransaction: {\n    template: function () { return exports.Group; },\n    choiceName: 'MakeGroupTransaction',\n    argumentDecoder: damlTypes.lazyMemo(function () { return exports.MakeGroupTransaction.decoder; }),\n    argumentEncode: function (__typed__) { return exports.MakeGroupTransaction.encode(__typed__); },\n    resultDecoder: damlTypes.lazyMemo(function () { return damlTypes.Unit.decoder; }),\n    resultEncode: function (__typed__) { return damlTypes.Unit.encode(__typed__); },\n  },\n};\n\n\ndamlTypes.registerTemplate(exports.Group);\n\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Internal = require('./Internal');\nexports.Internal = Internal;\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Template = require('./Template');\nexports.Template = Template;\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require('./module'));\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable-next-line no-unused-vars */\nvar jtv = require('@mojotech/json-type-validation');\n/* eslint-disable-next-line no-unused-vars */\nvar damlTypes = require('@daml/types');\n/* eslint-disable-next-line no-unused-vars */\nvar damlLedger = require('@daml/ledger');\n\n\nexports.Archive = {\n  decoder: damlTypes.lazyMemo(function () { return jtv.object({}); }),\n  encode: function (__typed__) {\n  return {\n  };\n}\n,\n};\n\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require('./module'));\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require('./module'));\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable-next-line no-unused-vars */\nvar jtv = require('@mojotech/json-type-validation');\n/* eslint-disable-next-line no-unused-vars */\nvar damlTypes = require('@daml/types');\n/* eslint-disable-next-line no-unused-vars */\nvar damlLedger = require('@daml/ledger');\n\nvar pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662 = require('@daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662');\n\nvar Transaction = require('../Transaction/module');\n\n\nexports.MakeTransaction = {\n  decoder: damlTypes.lazyMemo(function () { return jtv.object({lender: damlTypes.Party.decoder, amount: damlTypes.Numeric(10).decoder, }); }),\n  encode: function (__typed__) {\n  return {\n    lender: damlTypes.Party.encode(__typed__.lender),\n    amount: damlTypes.Numeric(10).encode(__typed__.amount),\n  };\n}\n,\n};\n\n\n\nexports.Follow = {\n  decoder: damlTypes.lazyMemo(function () { return jtv.object({userToFollow: damlTypes.Party.decoder, }); }),\n  encode: function (__typed__) {\n  return {\n    userToFollow: damlTypes.Party.encode(__typed__.userToFollow),\n  };\n}\n,\n};\n\n\n\nexports.User = {\n  templateId: 'e250459dd4d01ceaad370fd90d53caf5628d829c5aff34e04749866d8e50029b:User:User',\n  keyDecoder: damlTypes.lazyMemo(function () { return damlTypes.lazyMemo(function () { return damlTypes.Party.decoder; }); }),\n  keyEncode: function (__typed__) { return damlTypes.Party.encode(__typed__); },\n  decoder: damlTypes.lazyMemo(function () { return jtv.object({username: damlTypes.Party.decoder, following: damlTypes.List(damlTypes.Party).decoder, }); }),\n  encode: function (__typed__) {\n  return {\n    username: damlTypes.Party.encode(__typed__.username),\n    following: damlTypes.List(damlTypes.Party).encode(__typed__.following),\n  };\n}\n,\n  Follow: {\n    template: function () { return exports.User; },\n    choiceName: 'Follow',\n    argumentDecoder: damlTypes.lazyMemo(function () { return exports.Follow.decoder; }),\n    argumentEncode: function (__typed__) { return exports.Follow.encode(__typed__); },\n    resultDecoder: damlTypes.lazyMemo(function () { return damlTypes.ContractId(exports.User).decoder; }),\n    resultEncode: function (__typed__) { return damlTypes.ContractId(exports.User).encode(__typed__); },\n  },\n  Archive: {\n    template: function () { return exports.User; },\n    choiceName: 'Archive',\n    argumentDecoder: damlTypes.lazyMemo(function () { return pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662.DA.Internal.Template.Archive.decoder; }),\n    argumentEncode: function (__typed__) { return pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662.DA.Internal.Template.Archive.encode(__typed__); },\n    resultDecoder: damlTypes.lazyMemo(function () { return damlTypes.Unit.decoder; }),\n    resultEncode: function (__typed__) { return damlTypes.Unit.encode(__typed__); },\n  },\n  MakeTransaction: {\n    template: function () { return exports.User; },\n    choiceName: 'MakeTransaction',\n    argumentDecoder: damlTypes.lazyMemo(function () { return exports.MakeTransaction.decoder; }),\n    argumentEncode: function (__typed__) { return exports.MakeTransaction.encode(__typed__); },\n    resultDecoder: damlTypes.lazyMemo(function () { return damlTypes.ContractId(Transaction.Transaction).decoder; }),\n    resultEncode: function (__typed__) { return damlTypes.ContractId(Transaction.Transaction).encode(__typed__); },\n  },\n};\n\n\ndamlTypes.registerTemplate(exports.User);\n\n","// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport enum DeploymentMode {\n  DEV,\n  PROD_DABL,\n  PROD_OTHER,\n}\n\nexport const deploymentMode: DeploymentMode =\n  process.env.NODE_ENV === 'development'\n  ? DeploymentMode.DEV\n  : window.location.hostname.endsWith('.projectdabl.com')\n  ? DeploymentMode.PROD_DABL\n  : DeploymentMode.PROD_OTHER;\n\n// Decide the ledger ID based on the deployment mode first,\n// then an environment variable, falling back on the sandbox ledger ID.\nexport const ledgerId: string =\n  deploymentMode === DeploymentMode.PROD_DABL\n  ? window.location.hostname.split('.')[0]\n  : process.env.REACT_APP_LEDGER_ID\n  ?? 'splitwise-daml-sandbox';\n\nexport const httpBaseUrl =\n  deploymentMode === DeploymentMode.PROD_DABL\n  ? `https://api.projectdabl.com/data/${ledgerId}/`\n  : undefined;\n","// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { encode } from 'jwt-simple';\nimport { ledgerId } from './config';\n\nexport const APPLICATION_ID: string = 'splitwise-daml';\n\n// NOTE: This is for testing purposes only.\n// To handle authentication properly,\n// see https://docs.daml.com/app-dev/authentication.html.\nexport const SECRET_KEY: string = 'secret';\n\nexport type Credentials = {\n  party: string;\n  token: string;\n  ledgerId: string;\n}\n\nfunction computeToken(party: string): string {\n  const payload = {\n    \"https://daml.com/ledger-api\": {\n      \"ledgerId\": ledgerId,\n      \"applicationId\": APPLICATION_ID,\n      \"actAs\": [party]\n    }\n  };\n  return encode(payload, SECRET_KEY, 'HS256');\n}\n\nexport const computeCredentials = (party: string): Credentials => {\n  const token = computeToken(party);\n  return {party, token, ledgerId};\n}\n\nexport default Credentials;\n","// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useCallback } from \"react\";\nimport { Button, Form, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport Credentials, { computeCredentials } from \"../Credentials\";\nimport Ledger from \"@daml/ledger\";\nimport { User } from \"@daml.js/splitwise-daml\";\nimport {\n  DeploymentMode,\n  deploymentMode,\n  ledgerId,\n  httpBaseUrl,\n} from \"../config\";\nimport { useEffect } from \"react\";\n\ntype Props = {\n  onLogin: (credentials: Credentials) => void;\n};\n\n/**\n * React component for the login screen of the `App`.\n */\nconst LoginScreen: React.FC<Props> = ({ onLogin }) => {\n  const [username, setUsername] = React.useState(\"\");\n\n  const login = useCallback(\n    async (credentials: Credentials) => {\n      try {\n        const ledger = new Ledger({ token: credentials.token, httpBaseUrl });\n        let userContract = await ledger.fetchByKey(\n          User.User,\n          credentials.party\n        );\n        if (userContract === null) {\n          const user = { username: credentials.party, following: [] };\n          userContract = await ledger.create(User.User, user);\n        }\n        onLogin(credentials);\n      } catch (error) {\n        alert(`Unknown error:\\n${error}`);\n      }\n    },\n    [onLogin]\n  );\n\n  const handleLogin = async (event: React.FormEvent) => {\n    event.preventDefault();\n    const credentials = computeCredentials(username);\n    await login(credentials);\n  };\n\n  const handleDablLogin = () => {\n    window.location.assign(\n      `https://login.projectdabl.com/auth/login?ledgerId=${ledgerId}`\n    );\n  };\n\n  useEffect(() => {\n    const url = new URL(window.location.toString());\n    const token = url.searchParams.get(\"token\");\n    if (token === null) {\n      return;\n    }\n    const party = url.searchParams.get(\"party\");\n    if (party === null) {\n      throw Error(\n        \"When 'token' is passed via URL, 'party' must be passed too.\"\n      );\n    }\n    url.search = \"\";\n    window.history.replaceState(window.history.state, \"\", url.toString());\n    login({ token, party, ledgerId });\n  }, [login]);\n\n  return (\n    <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header\n          as=\"h1\"\n          textAlign=\"center\"\n          size=\"huge\"\n          style={{ color: \"#223668\" }}\n        >\n          <Header.Content>Splitwise on DAML</Header.Content>\n        </Header>\n        <Form size=\"large\" className=\"test-select-login-screen\">\n          <Segment>\n            {deploymentMode !== DeploymentMode.PROD_DABL ? (\n              <>\n                {/* FORM_BEGIN */}\n                <Form.Input\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"Username\"\n                  value={username}\n                  className=\"test-select-username-field\"\n                  onChange={(e) => setUsername(e.currentTarget.value)}\n                />\n                <Button\n                  primary\n                  fluid\n                  className=\"test-select-login-button\"\n                  onClick={handleLogin}\n                >\n                  Log in\n                </Button>\n                {/* FORM_END */}\n              </>\n            ) : (\n              <Button primary fluid onClick={handleDablLogin}>\n                Log in with DABL\n              </Button>\n            )}\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default LoginScreen;\n","import React from \"react\";\nimport { Icon, List } from \"semantic-ui-react\";\nimport { Party } from \"@daml/types\";\nimport { User } from \"@daml.js/splitwise-daml\";\n\ntype Props = {\n  users: User.User[];\n  onFollow: (userToFollow: Party) => void;\n};\n\n/**\n * React component to display a list of `User`s.\n * Every party in the list can be added as a friend.\n */\nconst UserList: React.FC<Props> = ({ users, onFollow }) => {\n  return (\n    <List divided relaxed>\n      {[...users]\n        .sort((x, y) => x.username.localeCompare(y.username))\n        .map((user) => (\n          <List.Item key={user.username}>\n            <List.Icon name=\"user\" />\n            <List.Content>\n              <List.Content floated=\"right\">\n                <Icon\n                  name=\"add user\"\n                  link\n                  className=\"test-select-add-user-icon\"\n                  onClick={() => onFollow(user.username)}\n                />\n              </List.Content>\n              <List.Header className=\"test-select-user-in-network\">\n                {user.username}\n              </List.Header>\n            </List.Content>\n            <List.List>\n              {[...user.following]\n                .sort((x, y) => x.localeCompare(y))\n                .map((userToFollow) => (\n                  <List.Item key={userToFollow}>\n                    <List.Content floated=\"right\">\n                      <Icon\n                        name=\"add user\"\n                        link\n                        className=\"test-select-add-user-following-icon\"\n                        onClick={() => onFollow(userToFollow)}\n                      />\n                    </List.Content>\n                    <List.Icon name=\"user outline\" />\n                    <List.Content>\n                      <List.Header>{userToFollow}</List.Header>\n                    </List.Content>\n                  </List.Item>\n                ))}\n            </List.List>\n          </List.Item>\n        ))}\n    </List>\n  );\n};\n\nexport default UserList;\n","// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Form, List, Button } from 'semantic-ui-react';\nimport { Party } from '@daml/types';\n\ntype Props = {\n  parties: Party[];\n  onAddParty: (party: Party) => Promise<boolean>;\n}\n\n/**\n * React component to edit a list of `Party`s.\n */\nconst PartyListEdit: React.FC<Props> = ({parties, onAddParty}) => {\n  const [newParty, setNewParty] = React.useState('');\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  const addParty = async (event?: React.FormEvent) => {\n    if (event) {\n      event.preventDefault();\n    }\n    setIsSubmitting(true);\n    const success = await onAddParty(newParty);\n    setIsSubmitting(false);\n    if (success) {\n      setNewParty('');\n    }\n  }\n\n  return (\n    <List relaxed>\n      {[...parties].sort((x, y) => x.localeCompare(y)).map((party) =>\n        <List.Item\n          key={party}\n        >\n          <List.Icon name='user outline' />\n          <List.Content>\n            <List.Header className='test-select-following'>\n              {party}\n            </List.Header>\n          </List.Content>\n        </List.Item>\n      )}\n      <br />\n      <Form onSubmit={addParty}>\n        <Form.Input\n          fluid\n          readOnly={isSubmitting}\n          loading={isSubmitting}\n          className='test-select-follow-input'\n          placeholder=\"Username to follow\"\n          value={newParty}\n          onChange={(event) => setNewParty(event.currentTarget.value)}\n        />\n        <Button\n          type='submit'\n          className='test-select-follow-button'>\n          Follow\n        </Button>\n      </Form>\n    </List>\n  );\n};\n\nexport default PartyListEdit;\n","import React from \"react\";\nimport { Icon, List, ListItem } from \"semantic-ui-react\";\nimport { User, Transaction } from \"@daml.js/splitwise-daml\";\nimport {\n  useStreamQuery,\n  useStreamFetchByKeys,\n  useParty,\n  useLedger,\n} from \"@daml/react\";\n\n/**\n * React component displaying the list of messages for the current user.\n */\n\n// Generates the transaction list for a user\nconst TransactionList: React.FC = () => {\n  const allTransactions = useStreamQuery(Transaction.Transaction);\n  const username = useParty();\n  const myUserResult = useStreamFetchByKeys(User.User, () => [username], [\n    username,\n  ]);\n  const myUser = myUserResult.contracts[0]?.payload;\n  const ledger = useLedger();\n\n  let netValue = 0;\n\n  const debtStatus = (debt: Number) => {\n    return debt < 0 ? \"red\" : \"green\";\n  };\n\n  // Delete the transaction contract\n  const deleteTransaction = async (transactionContractId: string) => {\n    const archiveEvent = await ledger.archive(\n      Transaction.Transaction,\n      JSON.parse(JSON.stringify(transactionContractId))\n    );\n  };\n\n  return (\n    <List relaxed>\n      {allTransactions.contracts.map((transaction) => {\n        const { lender, borrower, amount } = transaction.payload;\n        netValue +=\n          myUser && lender === myUser.username\n            ? parseFloat(amount)\n            : -parseFloat(amount);\n        return (\n          <ListItem\n            className=\"test-select-message-item\"\n            key={transaction.contractId}\n            style={{\n              color: myUser && myUser.username === lender ? \"green\" : \"red\",\n            }}\n          >\n            <strong>\n              {lender} &rarr; {borrower}:\n            </strong>{\" \"}\n            {amount}\n            {myUser && myUser.username === lender ? (\n              <List.Content floated=\"right\">\n                <Icon\n                  name=\"delete\"\n                  link\n                  onClick={() => deleteTransaction(transaction.contractId)}\n                ></Icon>\n              </List.Content>\n            ) : (\n              \"\"\n            )}\n          </ListItem>\n        );\n      })}\n      <h3 style={{ color: debtStatus(netValue) }}>\n        You {netValue <= 0 ? \"owe\" : \"are owed\"} ${\" \"}\n        {netValue <= 0 ? -netValue : netValue}.\n      </h3>\n    </List>\n  );\n};\n\nexport default TransactionList;\n","import React from \"react\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { Party } from \"@daml/types\";\nimport { Group, User } from \"@daml.js/splitwise-daml\";\nimport { useParty, useLedger } from \"@daml/react\";\n\ntype Props = {\n  followers: Party[];\n  allGroups: Group.Group[];\n};\n\n/**\n * React component to make transaction with other user\n */\nconst MessageEdit: React.FC<Props> = ({ followers, allGroups }) => {\n  const lender = useParty();\n  const [borrower, setBorrower] = React.useState<string | undefined>();\n  const [amount, setAmount] = React.useState(\"\");\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [isGroup, setIsGroup] = React.useState(false);\n  const ledger = useLedger();\n\n  // Followers for the selection\n  let transactionTargetOptions = followers.map((follower) => ({\n    key: follower,\n    text: follower,\n    value: follower,\n  }));\n\n  // Groups for the selection\n  const groupNames = allGroups.map((group) => group.groupName);\n  let allGroupsTragetOptions = allGroups.map((group) => ({\n    key: group.groupName,\n    text: group.groupName,\n    value: group.groupName,\n    isgroup: true,\n  }));\n\n  // Every possible target for the transaction\n  transactionTargetOptions = transactionTargetOptions.concat(\n    allGroupsTragetOptions\n  );\n\n  const setAmountForTrnsaction = (event: any) => {\n    setAmount(event.currentTarget.value);\n  };\n\n  // Submitting a transaction\n  const submitTransaction = async (event: React.FormEvent) => {\n    try {\n      // If user decides to make a group transaction\n      if (isGroup) {\n        return submitGroupTransaction(event);\n      }\n      event.preventDefault();\n      if (borrower === undefined) {\n        return;\n      }\n      setIsSubmitting(true);\n      await ledger.exerciseByKey(User.User.MakeTransaction, borrower, {\n        lender,\n        amount,\n      });\n      setAmount(\"\");\n    } catch (error) {\n      alert(`Error sending message:\\n${JSON.stringify(error)}`);\n    } finally {\n      setIsSubmitting(false);\n      setIsGroup(false);\n    }\n  };\n\n  // Submitting a transaction with the group\n  const submitGroupTransaction = async (event: React.FormEvent) => {\n    event.preventDefault();\n    try {\n      event.preventDefault();\n      if (borrower === undefined) {\n        return;\n      }\n      setIsSubmitting(true);\n      await ledger.exerciseByKey(Group.Group.MakeGroupTransaction, lender, {\n        currGroupName: borrower,\n        totalAmount: amount,\n      });\n      setAmount(\"\");\n    } catch (error) {\n      alert(`Error sending message:\\n${JSON.stringify(error)}`);\n    } finally {\n      setIsSubmitting(false);\n      setIsGroup(false);\n      setBorrower(\"\");\n    }\n  };\n\n  return (\n    <Form onSubmit={submitTransaction}>\n      <Form.Dropdown\n        selection\n        className=\"test-select-message-receiver\"\n        placeholder=\"Select your friend or a group\"\n        options={transactionTargetOptions}\n        value={borrower}\n        onChange={(event) => {\n          setBorrower(event.currentTarget.textContent ?? undefined);\n          setIsGroup(\n            groupNames.includes(event.currentTarget.textContent ?? \"\")\n          );\n          console.log(event.currentTarget);\n        }}\n      />\n      <Form.Input\n        className=\"test-select-message-content\"\n        placeholder=\"Enter an amount\"\n        value={amount}\n        onChange={(event) => setAmountForTrnsaction(event)}\n      />\n      <Button\n        fluid\n        className=\"test-select-message-send-button\"\n        type=\"submit\"\n        disabled={isSubmitting || borrower === undefined || amount === \"\"}\n        loading={isSubmitting}\n        content=\"Create Transaction\"\n      />\n    </Form>\n  );\n};\n\nexport default MessageEdit;\n","import React from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { User, Group } from \"@daml.js/splitwise-daml\";\nimport { useParty, useLedger } from \"@daml/react\";\nimport Select from \"react-select\";\n\ntype Props = {\n  followers: User.User[];\n};\n\nconst GroupBox: React.FC<Props> = ({ followers }) => {\n  const lender = useParty();\n  const [groupName, setGroupName] = React.useState(\"\");\n  const [isSelected, setIsSelected] = React.useState([]);\n\n  const ledger = useLedger();\n\n  // List for all the connections\n  const options = followers.map((follower) => ({\n    value: follower.username,\n    label: follower.username,\n    key: follower.username,\n  }));\n\n  const addToSelect = async (event: any) => {\n    const newGroupMembers = event.map((follower: any) => follower.value);\n    setIsSelected((prev) => newGroupMembers);\n  };\n\n  // Creating a group if a similar group doesn't already exist, key for the contract is everyone in the group\n  const submitMessage = async (event: React.FormEvent) => {\n    event.preventDefault();\n    try {\n      await ledger.create(Group.Group, {\n        lender,\n        groupName: groupName,\n        involvedParties: isSelected,\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    } finally {\n      setGroupName(\"\");\n      setIsSelected([]);\n    }\n  };\n\n  return (\n    <Form onSubmit={(event) => submitMessage(event)}>\n      <Select\n        isMulti\n        options={options}\n        onChange={(event) => {\n          addToSelect(event);\n        }}\n      ></Select>\n      <Form.Input\n        className=\"test-select-message-content\"\n        placeholder=\"Group name\"\n        value={groupName}\n        onChange={(event: any) => {\n          setGroupName(event.currentTarget.value);\n        }}\n      />\n      <Button\n        fluid\n        className=\"test-select-message-send-button\"\n        type=\"submit\"\n        disabled={\n          groupName === \"\" || isSelected === [] || isSelected.length < 2\n        }\n        content=\"Create Transaction\"\n      />\n    </Form>\n  );\n};\n\nexport default GroupBox;\n","// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useMemo } from \"react\";\nimport {\n  Container,\n  Grid,\n  Header,\n  Icon,\n  Segment,\n  Divider,\n} from \"semantic-ui-react\";\nimport { Party } from \"@daml/types\";\nimport { User, Group } from \"@daml.js/splitwise-daml\";\nimport {\n  useParty,\n  useLedger,\n  useStreamFetchByKeys,\n  useStreamQueries,\n} from \"@daml/react\";\nimport UserList from \"./UserList\";\nimport PartyListEdit from \"./PartyListEdit\";\nimport TransactionList from \"./TransactionsList\";\nimport TransactionBox from \"./TransactionBox\";\nimport GroupBox from \"./GroupBox\";\n\n// USERS_BEGIN\nconst MainView: React.FC = () => {\n  const username = useParty();\n  const myUserResult = useStreamFetchByKeys(User.User, () => [username], [\n    username,\n  ]);\n  const myUser = myUserResult.contracts[0]?.payload;\n  const allUsers = useStreamQueries(User.User).contracts;\n  // USERS_END\n\n  // Sorted list of users that are following the current user\n  const followers = useMemo(\n    () =>\n      allUsers\n        .map((user) => user.payload)\n        .filter((user) => user.username !== username)\n        .sort((x, y) => x.username.localeCompare(y.username)),\n    [allUsers, username]\n  );\n\n  const allGroupContracts = useStreamQueries(Group.Group).contracts;\n  const allGroups = allGroupContracts.map((group) => group.payload);\n\n  // const allGroups = useMemo(\n  //   () =>\n  //     allGroupContracts\n  //       .map((group) => group.payload)\n  //   [allUsers, username]\n  // );\n  const ledger = useLedger();\n\n  const follow = async (userToFollow: Party): Promise<boolean> => {\n    try {\n      await ledger.exerciseByKey(User.User.Follow, username, { userToFollow });\n      return true;\n    } catch (error) {\n      alert(`Unknown error:\\n${error}`);\n      return false;\n    }\n  };\n  // FOLLOW_END\n\n  return (\n    <Container>\n      <Grid centered columns={3}>\n        <Grid.Row stretched>\n          <Grid.Column>\n            <Header\n              as=\"h1\"\n              size=\"huge\"\n              color=\"blue\"\n              textAlign=\"center\"\n              style={{ padding: \"1ex 0em 0ex 0em\" }}\n            >\n              {myUser ? `Welcome, ${myUser.username}!` : \"Loading...\"}\n            </Header>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row stretched>\n          <Grid.Column>\n            <Segment>\n              <Header as=\"h2\">\n                <Icon name=\"user\" />\n                <Header.Content>\n                  {myUser?.username ?? \"Loading...\"}\n                  <Header.Subheader>Users I'm following</Header.Subheader>\n                </Header.Content>\n              </Header>\n              <Divider />\n              <PartyListEdit\n                parties={myUser?.following ?? []}\n                onAddParty={follow}\n              />\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment>\n              <Header as=\"h2\">\n                <Icon name=\"globe\" />\n                <Header.Content>\n                  The Network\n                  <Header.Subheader>\n                    My followers and users they are following\n                  </Header.Subheader>\n                </Header.Content>\n              </Header>\n              <Divider />\n              {/* USERLIST_BEGIN */}\n              <UserList users={followers} onFollow={follow} />\n              {/* USERLIST_END */}\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <Segment>\n              <Header as=\"h2\">\n                <Icon name=\"pencil square\" />\n                <Header.Content>\n                  Transactions\n                  <Header.Subheader>\n                    Make a transaction with a follower or a group\n                  </Header.Subheader>\n                </Header.Content>\n              </Header>\n              <TransactionBox\n                followers={followers.map((follower) => follower.username)}\n                allGroups={allGroups}\n              />\n              <Divider />\n              <TransactionList />\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment>\n              <Header as=\"h2\">\n                <Icon name=\"pencil square\" />\n                <Header.Content>\n                  Groups\n                  <Header.Subheader>Create a Group</Header.Subheader>\n                </Header.Content>\n              </Header>\n              <GroupBox followers={followers} />\n              <Divider />\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default MainView;\n","// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Image, Menu } from 'semantic-ui-react'\nimport MainView from './MainView';\nimport { useParty } from '@daml/react';\n\ntype Props = {\n  onLogout: () => void;\n}\n\n/**\n * React component for the main screen of the `App`.\n */\nconst MainScreen: React.FC<Props> = ({onLogout}) => {\n  return (\n    <>\n      <Menu icon borderless>\n        <Menu.Item>\n          <Image\n            as='a'\n            href='https://www.daml.com/'\n            target='_blank'\n            src='/daml.svg'\n            alt='DAML Logo'\n            size='mini'\n          />\n        </Menu.Item>\n        <Menu.Menu position='right' className='test-select-main-menu'>\n          <Menu.Item position='right'>\n            You are logged in as {useParty()}.\n          </Menu.Item>\n          <Menu.Item\n            position='right'\n            active={false}\n            className='test-select-log-out'\n            onClick={onLogout}\n            icon='log out'\n          />\n        </Menu.Menu>\n      </Menu>\n\n      <MainView/>\n    </>\n  );\n};\n\nexport default MainScreen;\n","// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport LoginScreen from './LoginScreen';\nimport MainScreen from './MainScreen';\nimport DamlLedger from '@daml/react';\nimport Credentials from '../Credentials';\nimport { httpBaseUrl } from '../config';\n\n/**\n * React component for the entry point into the application.\n */\n// APP_BEGIN\nconst App: React.FC = () => {\n  const [credentials, setCredentials] = React.useState<Credentials | undefined>();\n\n  return credentials\n    ? <DamlLedger\n        token={credentials.token}\n        party={credentials.party}\n        httpBaseUrl={httpBaseUrl}\n      >\n        <MainScreen onLogout={() => setCredentials(undefined)}/>\n      </DamlLedger>\n    : <LoginScreen onLogin={setCredentials} />\n}\n// APP_END\n\nexport default App;\n","// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}